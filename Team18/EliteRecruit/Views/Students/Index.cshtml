@model EliteRecruit.Models.StudentViewModel

@{
    ViewData["Title"] = "Students";
}

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
</head>

<div class="container mt-5">
    <h1 style="color: navy;">@ViewData["Title"]</h1>
    <div class="btn-group mb-3" role="group" aria-label="Switch view">
        <form asp-controller="Students" asp-action="Index" method="get">
            <div class="d-flex align-items-center">
                <button class="btn custom fas fa-search" type="submit" value="" > </button>
                <input type="text" asp-for="SearchString"  class="form-control"/>
                <input class="btn custom" type="submit" value="Search"/>
                <select asp-for="SchoolY" asp-items="Model.GraduationYearOptions" class="btn custom">
                    <option value="" > Graduation Year</option>
                </select>
            </div>
        </form>
        <a  class="btn custom" id="table-view">Table View</a>
        <a  class="btn custom" id="card-view">Card View</a>
        <a  class="btn custom" asp-action="Create">Create New</a>
    </div>

    <div id="students-table" class="table-responsive">
        <table class="table table-striped">
            <thead class="thead-dark">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Students![0].FirstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Students![0].LastName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Students![0].School)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Students![0].GPA)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Students![0].Major)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Students![0].SchoolYear)
                    </th>      
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Students!)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                        <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                        <td>@Html.DisplayFor(modelItem => item.School)</td>
                        <td>@Html.DisplayFor(modelItem => item.GPA)</td>
                        <td>@Html.DisplayFor(modelItem => item.Major)</td>
                        <td>
                            @{
                                string schoolYearText = "";
                                if (int.TryParse(item.SchoolYear, out int year))
                                {
                                    switch (year)
                                    {
                                        case 1:
                                            schoolYearText = "Freshman";
                                            break;
                                        case 2:
                                            schoolYearText = "Sophomore";
                                            break;
                                        case 3:
                                            schoolYearText = "Junior";
                                            break;
                                        case 4:
                                            schoolYearText = "Senior";
                                            break;
                                        case 5:
                                            schoolYearText = "Graduate";
                                            break;
                                    }
                                }
                                else
                                {
                                    schoolYearText = "Unknown";
                                }
                            }
                            @schoolYearText
                        </td>
                        <td>
                            <a class="btn custom" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            <a class="btn custom" asp-action="Details" asp-route-id="@item.Id">Details</a>
                            <a class="btn custom" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div id="students-cards">
        <div class="row">
            @foreach (var item in Model.Students!)
            {
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">@Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)</h5>
                            <p class="card-text">School: @Html.DisplayFor(modelItem => item.School)</p>
                            <p class="card-text">GPA: @Html.DisplayFor(modelItem => item.GPA)</p>
                            <p class="card-text">Major: @Html.DisplayFor(modelItem => item.Major)</p>
                            @{
                                string schoolYearText = "";
                                if (int.TryParse(item.SchoolYear, out int year))
                                {
                                    switch (year)
                                    {
                                        case 1:
                                            schoolYearText = "Freshman";
                                            break;
                                        case 2:
                                            schoolYearText = "Sophomore";
                                            break;
                                        case 3:
                                            schoolYearText = "Junior";
                                            break;
                                        case 4:
                                            schoolYearText = "Senior";
                                            break;
                                        case 5:
                                            schoolYearText = "Graduate";
                                            break;
                                    }
                                }
                                else
                                {
                                    schoolYearText = "Unknown";
                                }
                            }
                            <p class="card-text">School Year: @schoolYearText</p>
                            <p class="card-text">Graduation Year: @Html.DisplayFor(modelItem => item.GraduationYear)</p>
                            <a class="btn custom" asp-action="Details" asp-route-id="@item.Id">Details</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const tableViewButton = document.getElementById("table-view");
            const cardViewButton = document.getElementById("card-view");
            const tableContainer = document.getElementById("students-table");
            const cardContainer = document.getElementById("students-cards");

            tableViewButton.addEventListener("click", function () {
                tableContainer.style.display = "block";
                cardContainer.style.display = "none";
            });

            cardViewButton.addEventListener("click", function () {
                tableContainer.style.display = "none";
                cardContainer.style.display = "block";
            });
        });
     </script>

}





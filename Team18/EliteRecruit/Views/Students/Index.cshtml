@model EliteRecruit.ViewModels.StudentViewModel

@{
    ViewData["Title"] = "Students";
}

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
</head>
<body>
    <div class="container font2">
        
        <h1 style="color: navy;">Students</h1>
        <div class="btn-group mb-3" role="group" aria-label="Switch view">
            <form asp-controller="Students" asp-action="Index" method="get">
                <div>
                    <input type="text" asp-for="searchString" class="form-control" />
                    <button class="btn custom fas fa-search" type="submit" value=""> </button>
                    <select asp-for="SchoolYearString" asp-items="Model.GraduationYearOptions" class="btn custom drop">
                        <option value="">Year</option>
                    </select>
                    <select asp-for="majorString" asp-items="Model.MajorList" class="btn custom drop">
                        <option value=""> Major</option>
                    </select>
                    <a class="btn custom" id="table-view">Table View</a>
                    <a class="btn custom" id="card-view">Card View</a>
                    <a class="btn custom" asp-action="Create">Create New</a>
                </div>
            </form>
        </div>

<div class="container mt-5">
    <h1 style="color: navy;">@ViewData["Title"]</h1>
    <div class="btn-group mb-3" role="group" aria-label="Switch view">
        <form asp-controller="Students" asp-action="Index" method="get">
            <div >
                <!-- <input type="text" asp-for="searchString"  class="form-control"/> -->
                <input type="text" asp-for="@Model.FilterBy" placeholder="Enter name..." class="form-control" />
                <button class="btn custom fas fa-search" type="submit" value=""> </button>
                <a asp-action="Index" class="btn custom">Clear</a>
                <select asp-for="SchoolYearString" asp-items="Model.GraduationYearOptions" class="btn custom drop">
                    <option value="" >Year</option>

                </select>
                <select asp-for="majorString" asp-items="Model.MajorList" class="btn custom drop">
                    <option value=""> Major</option>
                </select>
                <a class="btn custom" id="table-view">Table View</a>
                <a class="btn custom" id="card-view">Card View</a>
                <!-- <a class="btn custom" asp-action="Create">Create New</a> -->
                @Html.ActionLink("New", "Create", new { SortBy = Model.SortBy, FilterBy = Model.FilterBy }, new { @class = "btn custom" })
            </div>
        </form>
    </div>

    <div id="students-table" class="table-responsive">
        <table class="table table-striped">
            <thead class="thead-dark">
                <tr>
                    <th>
                        @Html.ActionLink(Html.DisplayNameFor(model => model.FirstName), "Index", new { SortBy = Model.SortByFirstName, FilterBy = Model.FilterBy }, new { @class = "nav-link2" })
                    </th>
                    <th>
                        @Html.ActionLink(Html.DisplayNameFor(model => model.LastName), "Index", new { SortBy = Model.SortByLastName, FilterBy = Model.FilterBy }, new { @class = "nav-link2" })
                    </th>
                    <th>
                        @Html.ActionLink(Html.DisplayNameFor(model => model.GPA), "Index", new { SortBy = Model.SortByGPA, FilterBy = Model.FilterBy }, new { @class = "nav-link2" })
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.School)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Major)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SchoolYear)
                    </th>      
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Students!)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                        <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                        <td>@Html.DisplayFor(modelItem => item.GPA)</td>
                        <td>@Html.DisplayFor(modelItem => item.School)</td>
                        <td>@Html.DisplayFor(modelItem => item.Major)</td>
                        <td>
                            @{
                                string schoolYearText = "";
                                if (int.TryParse(item.SchoolYear, out int year))
                                {
                                    switch (year)
                                    {
                                        switch (year)
                                        {
                                            case 1:
                                                schoolYearText = "Freshman";
                                                break;
                                            case 2:
                                                schoolYearText = "Sophomore";
                                                break;
                                            case 3:
                                                schoolYearText = "Junior";
                                                break;
                                            case 4:
                                                schoolYearText = "Senior";
                                                break;
                                            case 5:
                                                schoolYearText = "Graduate";
                                                break;
                                        }
                                    }
                                    else
                                    {
                                        schoolYearText = "Unknown";
                                    }
                                }
                                else
                                {
                                    schoolYearText = "Unknown";
                                }
                            }
                            @schoolYearText
                        </td>
                        <td>
                            <!-- <a class="btn custom" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            <a class="btn custom" asp-action="Details" asp-route-id="@item.Id">Details</a>
                            <a class="btn custom" asp-action="Delete" asp-route-id="@item.Id">Delete</a> -->
                            @Html.ActionLink("Edit", "Edit", new { Id = item.Id, SortBy = Model.SortBy, FilterBy = Model.FilterBy }) |
                            @Html.ActionLink("Details", "Details", new { Id = item.Id, SortBy = Model.SortBy, FilterBy = Model.FilterBy }) |
                            @Html.ActionLink("Delete", "Delete", new { Id = item.Id, SortBy = Model.SortBy, FilterBy = Model.FilterBy })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

        <div id="students-cards">
            @await Html.PartialAsync("_cardpartialview")
        </div>
    </div>
</body>


@section Scripts {
   <script>
        document.addEventListener("DOMContentLoaded", function () {
            const tableViewButton = document.getElementById("table-view");
            const cardViewButton = document.getElementById("card-view");
            const tableContainer = document.getElementById("students-table");
            const cardContainer = document.getElementById("students-cards");

            // Check if the user previously selected card view
            const isCardView = localStorage.getItem("viewPreference") === "card";

            // Set the initial display based on user preference or default to table view
            if (isCardView) {
                tableContainer.style.display = "none";
                cardContainer.style.display = "block";
            } else {
                tableContainer.style.display = "block";
                cardContainer.style.display = "none";
            }

            tableViewButton.addEventListener("click", function () {
                tableContainer.style.display = "block";
                cardContainer.style.display = "none";

                // Store the user's preference in localStorage
                localStorage.setItem("viewPreference", "table");
            });

            cardViewButton.addEventListener("click", function () {
                tableContainer.style.display = "none";
                cardContainer.style.display = "block";

                // Store the user's preference in localStorage
                localStorage.setItem("viewPreference", "card");
            });
        });
    </script>
}





@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model EliteRecruit.ViewModels.StudentViewModel

@if (SignInManager.IsSignedIn(User))
{
    <body class ="imageRing2">
    <section id="imageRing">
        <div style="padding-top: 20px;">
            <h2 style="color:navy;text-align:center">Top Performing Students</h2>
            <hr style="width: 30%; margin: auto; margin-bottom: 20px;color:navy;">
        </div>
        @if (SignInManager.IsSignedIn(User))
        {
            <div class="carousel">
                @await Html.PartialAsync("_carousel")
            </div>
        }
    </section>
    </body>
}

@section Scripts {
    <script>
        // Author: Hoang Tran (https://www.facebook.com/profile.php?id=100004848287494)
        // Github verson (1 file .html): https://github.com/HoangTran0410/3DCarousel/blob/master/index.html

        // You can change global variables here:
        var radius = 260; // how big of the radius default:240
        var autoRotate = true; // auto rotate or not
        var rotateSpeed = -60; // unit: seconds/360 degrees
        var imgWidth = 240; // width of images (unit: px) default: 120
        var imgHeight = 340; // height of images (unit: px) default:170

        // Link of background music - set 'null' if you dont want to play background music
        var bgMusicURL = null;
        //"https://api.soundcloud.com/tracks/143041228/stream?client_id=587aa2d384f7333a886010d5f52f302a";
        var bgMusicControls = false; // Show UI music control

        // ===================== start =======================
        setTimeout(init, 100);

        var odrag = document.getElementById("drag-container");
        var ospin = document.getElementById("spin-container");
        var aImg = ospin.getElementsByTagName("img");
        var aVid = ospin.getElementsByTagName("video");
        var aEle = [...aImg, ...aVid]; // combine 2 arrays

        // Size of images
        ospin.style.width = imgWidth + "px";
        ospin.style.height = imgHeight + "px";

        // Size of ground - depend on radius
        var ground = document.getElementById("ground");
        ground.style.width = radius * 3 + "px";
        ground.style.height = radius * 3 + "px";

        function init(delayTime) {
            for (var i = 0; i < aEle.length; i++) {
                aEle[i].style.transform =
                    "rotateY(" +
                    i * (360 / aEle.length) +
                    "deg) translateZ(" +
                    radius +
                    "px)";
                aEle[i].style.transition = "transform 1s";
                aEle[i].style.transitionDelay =
                    delayTime || (aEle.length - i) / 4 + "s";
            }
        }

        function applyTranform(obj) {
            // Constrain the angle of camera (between 0 and 180)
            if (tY > 180) tY = 180;
            if (tY < 0) tY = 0;

            // Apply the angle
            obj.style.transform = "rotateX(" + -tY + "deg) rotateY(" + tX + "deg)";
        }

        function playSpin(yes) {
            ospin.style.animationPlayState = yes ? "running" : "paused";
        }

        var sX,
            sY,
            nX,
            nY,
            desX = 0,
            desY = 0,
            tX = 0,
            tY = 10;

        // auto spin
        if (autoRotate) {
            var animationName = rotateSpeed > 0 ? "spin" : "spinRevert";
            ospin.style.animation = `${animationName} ${Math.abs(
                rotateSpeed
            )}s infinite linear`;
        }

        // add background music
        if (bgMusicURL) {
            document.getElementById("music-container").innerHTML += `<audio src="${bgMusicURL}" ${bgMusicControls ? "controls" : ""
                } autoplay loop>
                                <p>If you are reading this, it is because your browser does not support the audio element.</p>
                                </audio>
                                `;
        }

        // setup events
        document.onpointerdown = function (e) {
            clearInterval(odrag.timer);
            e = e || window.event;
            var sX = e.clientX,
                sY = e.clientY;

            this.onpointermove = function (e) {
                e = e || window.event;
                var nX = e.clientX,
                    nY = e.clientY;
                desX = nX - sX;
                desY = nY - sY;
                tX += desX * 0.1;
                tY += desY * 0.1;
                applyTranform(odrag);
                sX = nX;
                sY = nY;
            };

            this.onpointerup = function (e) {
                odrag.timer = setInterval(function () {
                    desX *= 0.95;
                    desY *= 0.95;
                    tX += desX * 0.1;
                    tY += desY * 0.1;
                    applyTranform(odrag);
                    playSpin(false);
                    if (Math.abs(desX) < 0.5 && Math.abs(desY) < 0.5) {
                        clearInterval(odrag.timer);
                        playSpin(true);
                    }
                }, 17);
                this.onpointermove = this.onpointerup = null;
            };

            return false;
        };

        document.onmousewheel = function (e) {
            /*
            e = e || window.event;
            var d = e.wheelDelta / 20 || -e.detail;
            radius += d;
            init(1);
            */
        };
    </script>
}
<!--
Copyright (c) 2024 by hoangtran (https://codepen.io/hoanghien0410/pen/MMPaqm)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.-->

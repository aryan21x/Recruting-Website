@model EliteRecruit.ViewModels.StudentViewModel
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Details";
    ApplicationUser currentUser = (ApplicationUser)await UserManager.GetUserAsync(User);
}

<div class="row">
    <h1>Student</h1>
    <h4>@Model.FullName</h4>
    <hr />
    <div class="col-md-6">
        <div>
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.FirstName)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.FirstName)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.LastName)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.LastName)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.School)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.School)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.GPA)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.GPA)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Major)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Major)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.SchoolYear)
                </dt>
                <dd class="col-sm-10">
                    @{
                        int schoolYear;
                        if (int.TryParse(Model.SchoolYear, out schoolYear))
                        {
                            switch (schoolYear)
                            {
                                case 1:
                                    @:Freshman
                                    break;
                                case 2:
                                    @:Sophomore
                                    break;
                                case 3:
                                    @:Junior
                                    break;
                                case 4:
                                    @:Senior
                                    break;
                                case 5:
                                    @:Graduate
                                    break;
                            }
                        }
                        else
                        {
                            @:Unknown
                        }
                    }
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Email)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Email)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.PhoneNumber)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.PhoneNumber)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.GraduationYear)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.GraduationYear)
                </dd>
            </dl>
        </div>
    </div>

    <div class="col-md-6">
        <div style="height: 300px; width: 400px; overflow: hidden; display: flex; justify-content: center; align-items: center;">
            <img src="@Model.ImagePath" alt="Image" style="max-height: 100%; width: 100%; height: 100%;">
        </div>
    </div>

</div>

<div>
    @Html.ActionLink("Edit", "Edit", new { Id = Model.Id, SortBy = Model.SortBy, FilterBy = Model.FilterBy, SchoolYearString = Model.SchoolYearString, majorString = Model.majorString }, new { @class = "btn custom" }) |
    @Html.ActionLink("Add Comment", "CreateComment", "Students", new { studentId = Model.Id, studentFirstName = Model.FirstName, studentLastName = Model.LastName }, new { @class = "btn custom" }) |
    @Html.ActionLink("Cancel", "Index", new { SortBy = Model.SortBy, FilterBy = Model.FilterBy, SchoolYearString = Model.SchoolYearString, majorString = Model.majorString }, new { @class = "btn custom" })
</div>


<h4>Pipeline Status</h4>
<form asp-controller="Students" asp-action="UpdatePipelineStatus" method="post" class="row">
    <div class="col">
        <label asp-for="PipelineStatus.Contact"></label>
        <input asp-for="PipelineStatus.Contact" />
    </div>
    <div class="col">
        <label asp-for="PipelineStatus.Interview"></label>
        <input asp-for="PipelineStatus.Interview" />
    </div>
    <div class="col">
        <label asp-for="PipelineStatus.Offered"></label>
        <input asp-for="PipelineStatus.Offered" />
    </div>
    <div class="col">
        <label asp-for="PipelineStatus.Hired"></label>
        <input asp-for="PipelineStatus.Hired" />
    </div>
    <input type="hidden" asp-for="Id" />
    <input type="submit" value="Update" class="btn btn-primary" />
</form>


<br />

@if (Model.Comments != null && Model.Comments.Any())
{
    <div>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.CommentText)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CommentEnteredOn)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CommentEnteredBy)
                    </th>
                    <th>
                        Actions
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Comments != null)
                {
                    @foreach (var item in Model.Comments)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Text)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EnteredOn)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EnteredBy)
                            </td>
                            @if (currentUser == item.ApplicationUser)
                            {
                                <td>
                                    <div style="display: inline-block;">
                                        @Html.ActionLink("Edit", "EditComment", new { id = item.Id, commentText = item.Text, studentId = Model.Id }, new { @class = "nav-link2", style = "" })
                                    </div>
                                    <div style="display: inline-block; margin-left: 5px;">
                                        @Html.ActionLink("Delete", "DeleteComment", new { id = item.Id, studentId = Model.Id }, new { @class = "nav-link2", style = "" })
                                    </div>
                                </td>

                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
}


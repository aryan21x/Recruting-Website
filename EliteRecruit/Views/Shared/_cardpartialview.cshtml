@model EliteRecruit.ViewModels.StudentViewModel

<div class="row">
    @foreach (var item in Model.Students!)
    {
        <div class="col-md-4 mb-4">
            <div class="card">
                <div class="card-body">
                    <div style="height: 400px; width = 500px;overflow: hidden; display: flex; justify-content: center; align-items: center;">
                        <img src="@item.ImagePath" alt="Image" style=" max-height: 100%; width: 100%; height: 100%;">
                    </div>
                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)</h5>
                    <p class="card-text">School: @Html.DisplayFor(modelItem => item.School)</p>
                    <p class="card-text">GPA: @Html.DisplayFor(modelItem => item.GPA)</p>
                    <p class="card-text">Major: @Html.DisplayFor(modelItem => item.Major)</p>
                    @{
                        string schoolYearText = "";
                        if (int.TryParse(item.SchoolYear, out int year))
                        {
                            switch (year)
                            {
                                case 1:
                                    schoolYearText = "Freshman";
                                    break;
                                case 2:
                                    schoolYearText = "Sophomore";
                                    break;
                                case 3:
                                    schoolYearText = "Junior";
                                    break;
                                case 4:
                                    schoolYearText = "Senior";
                                    break;
                                case 5:
                                    schoolYearText = "Graduate";
                                    break;
                            }
                        }
                        else
                        {
                            schoolYearText = "Unknown";
                        }
                    }
                    <p class="card-text">School Year: @schoolYearText</p>
                    <p class="card-text">Graduation Year: @Html.DisplayFor(modelItem => item.GraduationYear)</p>
                    <p>
                        @Html.ActionLink("Edit", "Edit", new { Id = item.Id, SortBy = Model.SortBy, FilterBy = Model.FilterBy, SchoolYearString = Model.SchoolYearString, majorString = Model.majorString }, new { @class = "nav-link2", style = "padding: 0;" }) |
                        @Html.ActionLink("Details", "Details", new { Id = item.Id, SortBy = Model.SortBy, FilterBy = Model.FilterBy, SchoolYearString = Model.SchoolYearString, majorString = Model.majorString }, new { @class = "nav-link2", style = "padding: 0;" }) |
                        @Html.ActionLink("Delete", "Delete", new { Id = item.Id, SortBy = Model.SortBy, FilterBy = Model.FilterBy, SchoolYearString = Model.SchoolYearString, majorString = Model.majorString }, new { @class = "nav-link2", style = "padding: 0;" })
                    </p>
                </div>
            </div>
        </div>
    }
</div>
